#!/sbin/runscript
#
# /etc/init.d/urbackup_client  Script to start and stop UrBackup Client

depend () {
	need net
}

checkconfig() {
	ebegin "[UrBackup Client] Ajutando Configuraciones"
		LOGFILE=${LOGFILE:-"urbackup.log"}
		LOGLEVEL=${LOGLEVEL:-"error"}
		
		SQLITE_TMPDIR=${SQLITE_TMPDIR:-""}
		BROADCAST_INTERFACES=${BROADCAST_INTERFACES:-""}
		
		DESC="UrBackup Client deamon"             	# Introduce a short description here
		NAME="urbackup_client"             			# Introduce the short server's name here
		DAEMON=/usr/sbin/start_urbackup_client 		# Introduce the server's location here
		DAEMON_REAL=/usr/sbin/urbackup_client
		PIDFILE=/var/run/$NAME.pid
		SCRIPTNAME=/etc/init.d/$NAME
		DAEMON_TMPDIR=/tmp
		NICE_LEVEL="-5"
		IOSCHED_CLASS="2"
		#IOSCHED_CLASS="best-effort"
	eend $?
}

borrarpidfile()
{
	if [ -f ${PIDFILE} ]; then
		ebegin "[UrBackup Client] Borrando fichero PID (${PIDFILE})"
			rm -f "${PIDFILE}"
		eend $?
	fi
}

preparartempdir()
{	
	if [ -z ${DAEMON_TMPDIR} ]; then
		return false
	fi
	ebegin "[UrBackup Client] Ajutando directorio temporal"
		DAEMON_TMPDIR="$DAEMON_TMPDIR/urbackup_client_tmp"
		rm -Rf $DAEMON_TMPDIR > /dev/null 2>&1
		mkdir $DAEMON_TMPDIR > /dev/null 2>&1
		chown ${RUN_USER}:${RUN_GRUPO} $DAEMON_TMPDIR
	eend $?
}

start() {
	checkconfig || return 1
	preparartempdir || return 1

	DAEMON_ARGS="--logfile $LOGFILE --loglevel $LOGLEVEL"

	export TMPDIR=$DAEMON_TMPDIR
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	
	
	ulimit -n 10000 > /dev/null 2>&1
	ebegin "[UrBackup Client] Iniciando Servicio Test"
		start-stop-daemon --start --quiet --pidfile "${PIDFILE}" --nicelevel ${NICE_LEVEL} --ionice ${IOSCHED_CLASS} --exec ${DAEMON_REAL} --test > /dev/null || return 1
		RETVAL=$?
	eend $RETVAL
	
	ebegin "[UrBackup Client] Iniciando Servicio Daemon"
		start-stop-daemon --start --quiet --pidfile "${PIDFILE}" --nicelevel ${NICE_LEVEL} --ionice ${IOSCHED_CLASS} --exec ${DAEMON} -- ${DAEMON_ARGS} || return 2
		RETVAL=$?
	eend $RETVAL
}


stop() {
	checkconfig || return 1
	ebegin "[UrBackup Client] Deteniendo Servicio"
		echo -n "	Espere..."
        start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5  --pidfile "${PIDFILE}" -- ${NAME}
		RETVAL="$?"
		[ "$RETVAL" = 2 ] && return 2
		
		echo ""
		echo -n "	Espere..."
		start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec ${DAEMON_REAL}
		RETVAL="$?"
		[ "$RETVAL" = 2 ] && return 2
		
	eend $RETVAL
	borrarpidfile
}

restart () {
	svc_stop
	echo
	sleep 10
	svc_start
}
