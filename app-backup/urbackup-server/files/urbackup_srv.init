#!/sbin/runscript
#
# /etc/init.d/urbackup_srv  Script to start and stop UrBackup Server

depend () {
	need net
}

checkconfig() {
	ebegin "[UrBackup Server] Ajutando Configuraciones"
		FASTCGI_PORT=${FASTCGI_PORT:-"55413"}
		HTTP_PORT=${HTTP_PORT:-"55414"}
		LOGFILE=${LOGFILE:-"urbackup.log"}
		LOGLEVEL=${LOGLEVEL:-"error"}
		DAEMON_TMPDIR=${DAEMON_TMPDIR:-"/tmp"}
		SQLITE_TMPDIR=${SQLITE_TMPDIR:-""}
		BROADCAST_INTERFACES=${BROADCAST_INTERFACES:-""}
		
		
		RUN_USER=${RUN_USER:-"urbackup"}
		RUN_GRUPO=${RUN_GRUPO:-"urbackup"}

		
		DESC="UrBackup server deamon"             	# Introduce a short description here
		NAME="urbackup_srv"             			# Introduce the short server's name here
		DAEMON=/usr/sbin/start_urbackup_server 		# Introduce the server's location here
		DAEMON_REAL=/usr/sbin/urbackup_srv
		PIDFILE=/var/run/$NAME.pid
		PIDFILET=/var/run/$NAME_test.pid
		SCRIPTNAME=/etc/init.d/$NAME
		NICE_LEVEL="19"
		IOSCHED_CLASS="2"
		#IOSCHED_CLASS="best-effort"
	eend $?
}

borrarpidfile()
{
	if [ -f ${PIDFILET} ]; then
		ebegin "[UrBackup Server] Borrando fichero PID Test (${PIDFILET})"
			rm -f "${PIDFILET}"
		eend $?
	fi
	if [ -f ${PIDFILE} ]; then
		ebegin "[UrBackup Server] Borrando fichero PID Daemon (${PIDFILE})"
			rm -f "${PIDFILE}"
		eend $?
	fi
}

preparartempdir()
{	
	if [ -z ${DAEMON_TMPDIR} ]; then
		return false
	fi
	ebegin "[UrBackup Server] Ajutando directorio temporal"
		DAEMON_TMPDIR="$DAEMON_TMPDIR/urbackup_tmp"
		rm -Rf $DAEMON_TMPDIR > /dev/null 2>&1
		mkdir $DAEMON_TMPDIR > /dev/null 2>&1
		chown ${RUN_USER}:${RUN_GRUPO} $DAEMON_TMPDIR
	eend $?
}

start() {
	checkconfig || return 1
	preparartempdir || return 1
	
#	if [ -n $SQLITE_TMPDIR ]; then
#		SQLITE_TMPDIR="--sqlite_tmpdir \"$SQLITE_TMPDIR\""
#	fi
	
#	if [ -n $BROADCAST_INTERFACES ]; then
#		BROADCAST_INTERFACES="--broadcast_interfaces \"$BROADCAST_INTERFACES\""
#	fi

	DAEMON_ARGS="--fastcgi_port $FASTCGI_PORT --logfile $LOGFILE --loglevel $LOGLEVEL --http_port $HTTP_PORT $SQLITE_TMPDIR $BROADCAST_INTERFACES"

	export TMPDIR=$DAEMON_TMPDIR
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	
	ulimit -n 10000 > /dev/null 2>&1
	#ebegin "[UrBackup Server] Iniciando Servicio Test"
	#	start-stop-daemon --start --quiet --pidfile "${PIDFILET}" --nicelevel ${NICE_LEVEL} --ionice ${IOSCHED_CLASS} --user "${RUN_USER}" --make-pidfile --exec "${DAEMON_REAL}" --test > /dev/null || return 1
	#	RETVAL=$?
	#eend $RETVAL
	
	ebegin "[UrBackup Server] Iniciando Servicio Daemon"
		start-stop-daemon --start --quiet --pidfile "${PIDFILE}" --nicelevel ${NICE_LEVEL} --ionice ${IOSCHED_CLASS} --user "${RUN_USER}" --make-pidfile --exec "${DAEMON}" -- ${DAEMON_ARGS} > /dev/null || return 2
		RETVAL=$?
	eend $RETVAL
}


stop() {
	checkconfig || return 1
	#ebegin "[UrBackup Server] Deteniendo Servicio Test"
	#	echo -n "	Espere..."
	#	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5  --pidfile "${PIDFILET}" -- ${NAME}
	#	RETVAL="$?"
	#eend $RETVAL
	#[ "$RETVAL" = 2 ] && return 2
		
	ebegin "[UrBackup Server] Deteniendo Servicio Daemin"
		echo -n "	Espere..."
		start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5  --pidfile "${PIDFILE}" -- ${NAME}
		#start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec ${DAEMON_REAL}
		#start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile "${PIDFILE}" -- ${DAEMON_REAL}
		#start-stop-daemon --stop --user "${RUN_USER}" --progress --pidfile "${PIDFILE}" --retry=TERM/60/KILL/15
		RETVAL="$?"
	eend $RETVAL
	#[ "$RETVAL" = 2 ] && return 2
	
	borrarpidfile
}

restart () {
	svc_stop
	echo
	sleep 10
	svc_start
}